<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.23.0@f1fe6ff483bf325c803df9f510d09a03fd796f88">
  <file src="src/Opposite.php">
    <InternalClass occurrences="1"/>
    <InternalMethod occurrences="1"/>
    <InvalidReturnType occurrences="2">
      <code>Assertion</code>
      <code>Assertion</code>
    </InvalidReturnType>
  </file>
  <file src="src/Support/Constraint/ObjectEquals.php">
    <ParamNameMismatch occurrences="2">
      <code>$actual</code>
      <code>$actual</code>
    </ParamNameMismatch>
  </file>
  <file src="src/Support/Dom.php">
    <PossiblyNullArgument occurrences="1">
      <code>$result-&gt;firstChild</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Traits/CustomTrait.php">
    <InvalidScalarArgument occurrences="2">
      <code>10</code>
      <code>10</code>
    </InvalidScalarArgument>
    <TooManyArguments occurrences="2">
      <code>new IsEqual($expectedString, 0.0, 10, false, true)</code>
      <code>new IsEqual($expectedString, 0.0, 10, false, true)</code>
    </TooManyArguments>
    <UndefinedDocblockClass occurrences="1">
      <code>string|Closure</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Traits/PHPUnitCustomTrait.php">
    <InternalClass occurrences="2"/>
    <InternalMethod occurrences="4">
      <code>getComparisonFailure</code>
      <code>getComparisonFailure</code>
    </InternalMethod>
  </file>
  <file src="src/Traits/PHPUnitPolyfillTrait.php">
    <TooManyArguments occurrences="8">
      <code>Assert::assertFileEquals($expected, $actual, $message, false, true)</code>
      <code>Assert::assertFileEquals($expected, $actual, $message, true)</code>
      <code>Assert::assertFileNotEquals($expected, $actual, $message, false, true)</code>
      <code>Assert::assertFileNotEquals($expected, $actual, $message, true)</code>
      <code>Assert::assertStringEqualsFile($expectedFile, $actual, $message, false, true)</code>
      <code>Assert::assertStringEqualsFile($expectedFile, $actual, $message, true)</code>
      <code>Assert::assertStringNotEqualsFile($expectedFile, $actual, $message, false, true)</code>
      <code>Assert::assertStringNotEqualsFile($expectedFile, $actual, $message, true)</code>
    </TooManyArguments>
    <UndefinedMethod occurrences="3">
      <code>Assert::assertArrayIsList($actual, $message)</code>
      <code>Assert::assertStringContainsStringIgnoringLineEndings($needle, $actual, $message)</code>
      <code>Assert::assertStringEqualsStringIgnoringLineEndings($expected, $actual, $message)</code>
    </UndefinedMethod>
  </file>
  <file src="src/Traits/PHPUnitShortNameTrait.php">
    <TooManyArguments occurrences="1">
      <code>directoryExists</code>
    </TooManyArguments>
  </file>
</files>
